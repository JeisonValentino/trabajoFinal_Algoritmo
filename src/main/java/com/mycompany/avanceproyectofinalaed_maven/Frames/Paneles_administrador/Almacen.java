package com.mycompany.avanceproyectofinalaed_maven.Frames.Paneles_administrador;

import com.mycompany.avanceproyectofinalaed_maven.Frames.Paneles_Compra.Vistas.Modal_Ofertas;
import com.mycompany.avanceproyectofinalaed_maven.Frames.Paneles_Tienda.Controladores.Controlador_Tienda;
import com.mycompany.avanceproyectofinalaed_maven.Frames.Paneles_Tienda.Vistas.Tienda;
import com.mycompany.avanceproyectofinalaed_maven.Frames.Paneles_Tienda.Vistas.vista_producto;
import com.mycompany.avanceproyectofinalaed_maven.misClases.ImagenAlmacen;
import com.mycompany.avanceproyectofinalaed_maven.misClases.Listas.Lista_Productos;
import com.mycompany.avanceproyectofinalaed_maven.misClases.Productos;
import java.awt.Component;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;



  class ImageRenderer extends DefaultTableCellRenderer {
    private JLabel label;

    public ImageRenderer() {
        label = new JLabel();
        label.setHorizontalAlignment(JLabel.CENTER);
    }

    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        if (value instanceof ImageIcon) {
            label.setIcon((ImageIcon) value);
        } else {
            label.setIcon(null);
        }
        return label;
    }
}


  class BotonRenderer extends JButton implements TableCellRenderer {
        public BotonRenderer() {
            setOpaque(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText("Ver");
            return this;
        }
    }











public class Almacen extends javax.swing.JFrame {

    /**
     * Creates new form Almacen
     */
    
       Lista_Productos listaProductos = Lista_Productos.getInstancia();
 ImagenAlmacen imagen_almacen ;
    public Almacen() {
        initComponents();
        tablaAlmacen.getColumnModel().getColumn(6).setCellRenderer(new ImageRenderer());
tablaAlmacen.getColumnModel().getColumn(7).setCellRenderer(new BotonRenderer());
tablaAlmacen.getColumnModel().getColumn(7).setCellEditor(new BotonEditor(new JCheckBox()));
 actualizarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAlmacen = new javax.swing.JPanel();
        cabecera = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        cuerpo = new javax.swing.JPanel();
        formulario = new javax.swing.JPanel();
        imagen_input = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btn_imagen = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        input_img = new javax.swing.JLabel();
        formulario_text = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        textFieldNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        textFieldPrecio = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        comboBoxSeccion = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        comboBoxMarca = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        textFieldCantidad = new javax.swing.JTextField();
        cuerpo_tabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAlmacen = new javax.swing.JTable();
        botones_acciones = new javax.swing.JPanel();
        quitar_btn = new javax.swing.JButton();
        agregar_btn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        camboBusqueda = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelAlmacen.setBackground(new java.awt.Color(255, 204, 0));
        panelAlmacen.setForeground(new java.awt.Color(102, 0, 102));
        panelAlmacen.setLayout(new java.awt.BorderLayout());

        cabecera.setBackground(new java.awt.Color(255, 204, 0));
        cabecera.setMinimumSize(new java.awt.Dimension(260, 100));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 5);
        flowLayout1.setAlignOnBaseline(true);
        cabecera.setLayout(flowLayout1);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/LogoSinFondoResized.PNG"))); // NOI18N
        jLabel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel1.setPreferredSize(new java.awt.Dimension(250, 80));
        cabecera.add(jLabel1);

        jButton4.setText("IR A TIENDA");
        jButton4.setMargin(new java.awt.Insets(2, 10, 3, 14));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        cabecera.add(jButton4);

        panelAlmacen.add(cabecera, java.awt.BorderLayout.NORTH);

        cuerpo.setBackground(new java.awt.Color(255, 204, 0));
        cuerpo.setLayout(new java.awt.BorderLayout(0, 10));

        formulario.setBackground(new java.awt.Color(255, 204, 0));
        formulario.setMinimumSize(new java.awt.Dimension(0, 0));
        formulario.setPreferredSize(new java.awt.Dimension(1144, 220));
        formulario.setLayout(new java.awt.BorderLayout(0, 10));

        imagen_input.setBackground(new java.awt.Color(255, 204, 0));
        imagen_input.setPreferredSize(new java.awt.Dimension(176, 100));
        imagen_input.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(255, 204, 0));
        jPanel2.setForeground(new java.awt.Color(255, 204, 0));
        jPanel2.setOpaque(false);
        jPanel2.setPreferredSize(new java.awt.Dimension(774, 30));

        btn_imagen.setText("Subir Imagen");
        btn_imagen.setPreferredSize(new java.awt.Dimension(150, 27));
        btn_imagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_imagenActionPerformed(evt);
            }
        });
        jPanel2.add(btn_imagen);

        imagen_input.add(jPanel2, java.awt.BorderLayout.SOUTH);

        jPanel1.setBackground(new java.awt.Color(255, 204, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(774, 120));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        input_img.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        input_img.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        input_img.setPreferredSize(new java.awt.Dimension(150, 120));
        jPanel1.add(input_img);

        imagen_input.add(jPanel1, java.awt.BorderLayout.CENTER);

        formulario.add(imagen_input, java.awt.BorderLayout.SOUTH);

        formulario_text.setBackground(new java.awt.Color(255, 204, 0));
        formulario_text.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 20));
        formulario_text.setMinimumSize(new java.awt.Dimension(0, 0));
        formulario_text.setName(""); // NOI18N
        formulario_text.setPreferredSize(new java.awt.Dimension(135, 100));
        formulario_text.setLayout(new java.awt.GridLayout(3, 4, 10, 10));

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 102));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Nombre");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        formulario_text.add(jLabel8);

        textFieldNombre.setPreferredSize(new java.awt.Dimension(200, 200));
        textFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldNombreActionPerformed(evt);
            }
        });
        formulario_text.add(textFieldNombre);

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 102));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Precio");
        formulario_text.add(jLabel6);

        textFieldPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldPrecioActionPerformed(evt);
            }
        });
        formulario_text.add(textFieldPrecio);

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Seccion");
        formulario_text.add(jLabel5);

        comboBoxSeccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Confitería", "Bebidas", "Lacteos", "Comidas" }));
        formulario_text.add(comboBoxSeccion);

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Marca");
        formulario_text.add(jLabel4);

        comboBoxMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nestle", "Kraft", "Field", "D'onofrio" }));
        formulario_text.add(comboBoxMarca);

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Cantidad");
        formulario_text.add(jLabel7);
        formulario_text.add(textFieldCantidad);

        formulario.add(formulario_text, java.awt.BorderLayout.CENTER);

        cuerpo.add(formulario, java.awt.BorderLayout.NORTH);

        cuerpo_tabla.setBackground(new java.awt.Color(255, 204, 0));
        cuerpo_tabla.setMinimumSize(new java.awt.Dimension(0, 0));
        cuerpo_tabla.setLayout(new java.awt.BorderLayout(0, 10));

        jScrollPane1.setBackground(new java.awt.Color(255, 204, 0));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));

        tablaAlmacen.setAutoCreateRowSorter(true);
        tablaAlmacen.setBackground(new java.awt.Color(30, 30, 30));
        tablaAlmacen.setForeground(new java.awt.Color(0, 0, 204));
        tablaAlmacen.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Marca", "Cantidad", "Seccion", "Precio", "Imagen", "Ver"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tablaAlmacen.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        tablaAlmacen.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaAlmacen.setRowHeight(40);
        tablaAlmacen.setSelectionBackground(new java.awt.Color(30, 30, 30));
        tablaAlmacen.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaAlmacen.setShowGrid(true);
        tablaAlmacen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlmacenMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaAlmacen);

        cuerpo_tabla.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        botones_acciones.setBackground(new java.awt.Color(255, 204, 0));
        botones_acciones.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        botones_acciones.setToolTipText("");
        botones_acciones.setPreferredSize(new java.awt.Dimension(866, 30));
        botones_acciones.setLayout(new java.awt.GridLayout(1, 7, 10, 10));

        quitar_btn.setText("Quitar Producto");
        botones_acciones.add(quitar_btn);

        agregar_btn.setText("Agregar Producto");
        agregar_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_btnActionPerformed(evt);
            }
        });
        botones_acciones.add(agregar_btn);

        jButton1.setText("Burbuja");
        botones_acciones.add(jButton1);

        jButton2.setText("Seleccion");
        botones_acciones.add(jButton2);

        jButton3.setText("Insercion");
        botones_acciones.add(jButton3);

        jLabel2.setBackground(new java.awt.Color(255, 204, 0));
        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Buscar");
        botones_acciones.add(jLabel2);

        camboBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                camboBusquedaActionPerformed(evt);
            }
        });
        camboBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                camboBusquedaKeyReleased(evt);
            }
        });
        botones_acciones.add(camboBusqueda);

        cuerpo_tabla.add(botones_acciones, java.awt.BorderLayout.PAGE_START);

        cuerpo.add(cuerpo_tabla, java.awt.BorderLayout.CENTER);

        panelAlmacen.add(cuerpo, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelAlmacen, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldPrecioActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Tienda tienda = new Tienda();
        Modal_Ofertas modal =new Modal_Ofertas(tienda,true );
        vista_producto vista_pro=new vista_producto();
        Controlador_Tienda controlador_Tienda =new Controlador_Tienda(tienda,modal,vista_pro);
        tienda.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void camboBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_camboBusquedaKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        } else {
            camboBusqueda.setText(camboBusqueda.getText() );
             if(!camboBusqueda.getText().isEmpty()){
                 actualizarTabla_busqueda(camboBusqueda.getText());
             }else{
                 actualizarTabla();
             }
        }

      
    }//GEN-LAST:event_camboBusquedaKeyReleased

    private void camboBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_camboBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_camboBusquedaActionPerformed
class BotonEditor extends DefaultCellEditor {
    private JButton button;
    private String label;
    private boolean isPushed;

    public BotonEditor(JCheckBox checkBox) {
        super(checkBox);
        button = new JButton();
        button.setOpaque(true);

        // Agregar una acción al botón
        button.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Acción a realizar al hacer clic en el botón
                
                 DefaultTableModel model = (DefaultTableModel) tablaAlmacen.getModel();
    
    Object[] rowData = new Object[model.getColumnCount()];
    int selectedRow = tablaAlmacen.getSelectedRow();
    for (int i = 0; i < model.getColumnCount(); i++) {
        rowData[i] = model.getValueAt(selectedRow, i);
       
    }
                
                JOptionPane.showMessageDialog(null, "Botón presionado en fila: " +    rowData[0] +"-"+   rowData[1]+" - "+   rowData[2]+"-"+   rowData[3]    );
            }
        });
    }

    @Override
    public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
        if (isSelected) {
            button.setForeground(table.getSelectionForeground());
            button.setBackground(table.getSelectionBackground());
        } else {
            button.setForeground(table.getForeground());
            button.setBackground(table.getBackground());
        }

        label = (value == null) ? "" : value.toString();
        button.setText(label);
        isPushed = true;
        return button;
    }

    @Override
    public Object getCellEditorValue() {
        if (isPushed) {
            // Realizar alguna acción si se presiona el botón
            // ...

            // Restaurar el estado del botón
            isPushed = false;
        }
        return label;
    }

    @Override
    public boolean stopCellEditing() {
        isPushed = false;
        return super.stopCellEditing();
    }

    @Override
    protected void fireEditingStopped() {
        super.fireEditingStopped();
    }
}
    private void agregar_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_btnActionPerformed


        String nombre = textFieldNombre.getText();
        String marca = comboBoxMarca.getSelectedItem().toString();
        String seccion = comboBoxSeccion.getSelectedItem().toString();
        double precio = Double.parseDouble(textFieldPrecio.getText());
        int cantidad = Integer.parseInt(textFieldCantidad.getText());
Productos producto =new Productos (nombre,marca,seccion ,precio,imagen_almacen ,cantidad);
  listaProductos.AgregarDatos(producto);
 
  actualizarTabla();


    }//GEN-LAST:event_agregar_btnActionPerformed

    private void textFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldNombreActionPerformed

    private void btn_imagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_imagenActionPerformed
 String ruta="";
        JFileChooser chooser =new JFileChooser();
        FileNameExtensionFilter filtrado =new FileNameExtensionFilter("JPG", "PNG","GIF","png","jpg","gif");
        chooser.setFileFilter(filtrado);
        int respuesta =chooser.showOpenDialog(this);
        if(respuesta==JFileChooser.APPROVE_OPTION){
            ruta=chooser.getSelectedFile().getPath();
            Image miagen=new ImageIcon(ruta).getImage();
            ImageIcon micono =new ImageIcon(miagen.getScaledInstance(input_img.getWidth(), input_img.getHeight(), Image.SCALE_SMOOTH));
      
            input_img.setIcon(micono);
            File file = new File(ruta);
            String nombreArchivo = file.getName();
byte[] bytes = null;
     try {
         bytes = Files.readAllBytes(file.toPath());
     } catch (IOException ex) {
         Logger.getLogger(Almacen.class.getName()).log(Level.SEVERE, null, ex);
     }

imagen_almacen= new ImagenAlmacen(nombreArchivo,bytes);
        }
        
        
    }//GEN-LAST:event_btn_imagenActionPerformed

    private void tablaAlmacenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlmacenMouseClicked

    }//GEN-LAST:event_tablaAlmacenMouseClicked

 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Almacen().setVisible(true);
            }
        });
    }

    public void actualizarTabla() {
              DefaultTableModel modelo = (DefaultTableModel) tablaAlmacen.getModel();

  if(!listaProductos.retornarListaProductos().isEmpty()){
      System.out.println("paso el parametro");
      modelo.setRowCount(0);
        for (Productos producto : listaProductos.retornarListaProductos().get()) {
System.out.println(producto.getId());

BufferedImage imagen = null;
 BufferedImage imagen2 =null; 
          try {

              imagen = ImageIO.read(new ByteArrayInputStream(producto.getImagenAlmacen().getImagen()));
                              imagen2 = redimensionarImagen(imagen,40,40);
          } catch (IOException ex) {
              Logger.getLogger(Almacen.class.getName()).log(Level.SEVERE, null, ex);
          }
            Object[] Fila = {producto.getId(), producto.getNombre(), 
                             producto.getMarca(), producto.getCantidad(), 
                             producto.getSeccion(), producto.getPrecio(),new ImageIcon(imagen2)};
            modelo.addRow(Fila);
    }
    }
    }
    
    
    public void actualizarTabla_busqueda(String codigo) {
              DefaultTableModel modelo = (DefaultTableModel) tablaAlmacen.getModel();

  if(!listaProductos.retornarListaProductos().isEmpty()){
      System.out.println("paso el parametro");
      modelo.setRowCount(0);
        for (Productos producto : listaProductos.retornarListaProductos_busqueda(codigo).get()) {
System.out.println(producto.getId());

BufferedImage imagen = null;
 BufferedImage imagen2 =null; 
          try {

              imagen = ImageIO.read(new ByteArrayInputStream(producto.getImagenAlmacen().getImagen()));
                              imagen2 = redimensionarImagen(imagen,40,40);
          } catch (IOException ex) {
              Logger.getLogger(Almacen.class.getName()).log(Level.SEVERE, null, ex);
          }
            Object[] Fila = {producto.getId(), producto.getNombre(), 
                             producto.getMarca(), producto.getCantidad(), 
                             producto.getSeccion(), producto.getPrecio(),new ImageIcon(imagen2)};
            modelo.addRow(Fila);
    }
    }
    }
    
    
    
    
    
    
    
    
    
    
    
    
      public static BufferedImage redimensionarImagen(Image imagenOriginal, int nuevoAncho, int nuevoAlto) {
        // Crear una imagen vacía con las dimensiones deseadas
        BufferedImage imagenRedimensionada = new BufferedImage(nuevoAncho, nuevoAlto, BufferedImage.TYPE_INT_ARGB);

        // Obtener el objeto Graphics2D para dibujar en la imagen redimensionada
        Graphics2D g2d = imagenRedimensionada.createGraphics();

        // Aplicar interpolación y suavizado para obtener una mejor calidad de imagen
        g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2d.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        // Dibujar la imagen original en la imagen redimensionada
        g2d.drawImage(imagenOriginal, 0, 0, nuevoAncho, nuevoAlto, null);

        // Liberar los recursos
        g2d.dispose();

        return imagenRedimensionada;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton agregar_btn;
    private javax.swing.JPanel botones_acciones;
    private javax.swing.JButton btn_imagen;
    private javax.swing.JPanel cabecera;
    private javax.swing.JTextField camboBusqueda;
    private javax.swing.JComboBox<String> comboBoxMarca;
    private javax.swing.JComboBox<String> comboBoxSeccion;
    private javax.swing.JPanel cuerpo;
    private javax.swing.JPanel cuerpo_tabla;
    private javax.swing.JPanel formulario;
    private javax.swing.JPanel formulario_text;
    private javax.swing.JPanel imagen_input;
    private javax.swing.JLabel input_img;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelAlmacen;
    public javax.swing.JButton quitar_btn;
    private javax.swing.JTable tablaAlmacen;
    private javax.swing.JTextField textFieldCantidad;
    private javax.swing.JTextField textFieldNombre;
    private javax.swing.JTextField textFieldPrecio;
    // End of variables declaration//GEN-END:variables
}